pipeline{
        agent any
        
        environment {
        withCredentials([usernamePassword(credentialsId: 'dockerhubimageid', usernameVariable: 'dockeruser', passwordVariable: 'dockerpass')]) {
          // available as an env variable, but will be masked if you try to print it out any which way
          // note: single quotes prevent Groovy interpolation; expansion is by Bourne Shell, which is what you want
          sh 'echo $dockerpass'
          // also available as a Groovy variable
          echo dockerpass
          // or inside double quotes for string interpolation
          echo "username is $dockeruser"
        }
        
        }
        stages{
            stage('Build'){
                steps{
                    sh "echo this is where the building happens"
                    sh "cat README.md"
                    sh "ls -al; pwd"
                    sh "echo cloning repo"
                    // sh "git clone https://github.com/hmahmood2351/HelloWorldFlask" - not needed, already in my repo
                    sh "echo building docker image - application"
                    sh "sudo docker build -t hmahmood2351/helloworldflask /var/lib/jenkins/workspace/testjob/Application/"
                    sh "echo dockeruser; echo dockerpass"
                }
            }
            stage('Test'){
                steps{
                    sh "echo this is where the testing happens"
                }
            }
            stage('Deployment'){
                steps{
                    sh "echo this is where the deployment happens"
                    sh "echo pushing up to dockerhub"
                    sh "echo running a cmd that triggers a rolling update on the docker swarm manager, pushing it to workers"
                }
            }
        }
}
